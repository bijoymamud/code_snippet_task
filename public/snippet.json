[
    {
      "id": "f1a23d",
      "title": "Swap Elements in an Array",
      "date": "Jul 6",
      "category": "JavaScript Functions",
      "description": "This function takes an array and two indices as arguments, swaps the elements, and returns a new array with the elements swapped.",
      "code": "function swapArrayElements(array, index1, index2) {\n  const newArray = [...array];\n  [newArray[index1], newArray[index2]] = [newArray[index2], newArray[index1]];\n  return newArray;\n}",
      "usage": "const originalArray = [1, 2, 3, 4, 5]; const swappedArray = swapArrayElements(originalArray, 1, 3);"
    },
    {
      "id": "b7e5c4",
      "title": "Reduce: Group By Property",
      "date": "Jul 6",
      "category": "Reduce Functions",
      "description": "This function groups an array of objects by a specified property, returning an object with keys as the property values.",
      "code": "function groupBy(arr, prop) {\n  return arr.reduce((acc, obj) => {\n    const key = obj[prop];\n    if (!acc[key]) acc[key] = [];\n    acc[key].push(obj);\n    return acc;\n  }, {});\n}",
      "usage": "const groupedPeople = groupBy(people, 'age');"
    },
    {
      "id": "c8d9f7",
      "title": "Array Filter: Remove Null Values",
      "date": "Jul 8",
      "category": "Array Functions",
      "description": "This function filters out null or undefined values from an array, returning a clean array with only valid elements.",
      "code": "function removeNulls(arr) {\n  return arr.filter(item => item != null);\n}",
      "usage": "const filteredArray = removeNulls([1, null, 2, undefined, 3]);"
    },
    {
      "id": "a4b1e6",
      "title": "Map: Square All Elements",
      "date": "Jul 9",
      "category": "Map Functions",
      "description": "This function takes an array and returns a new array where each element is the square of the original element.",
      "code": "function squareElements(arr) {\n  return arr.map(num => num * num);\n}",
      "usage": "const squaredArray = squareElements([1, 2, 3, 4]);"
    },
    {
      "id": "e3c2f5",
      "title": "Find: First Even Number",
      "date": "Jul 10",
      "category": "Array Functions",
      "description": "This function finds the first even number in an array and returns it. If no even number is found, it returns undefined.",
      "code": "function findFirstEven(arr) {\n  return arr.find(num => num % 2 === 0);\n}",
      "usage": "const firstEven = findFirstEven([1, 3, 5, 8, 10]);"
    },
    {
      "id": "f9e7b2",
      "title": "Sort: Descending Order",
      "date": "Jul 11",
      "category": "Sort Functions",
      "description": "This function sorts an array of numbers in descending order, from the highest to the lowest.",
      "code": "function sortDescending(arr) {\n  return arr.sort((a, b) => b - a);\n}",
      "usage": "const sortedArray = sortDescending([5, 2, 8, 3, 1]);"
    },
    {
      "id": "d6b3e8",
      "title": "Reduce: Sum of Array",
      "date": "Jul 12",
      "category": "Reduce Functions",
      "description": "This function calculates the sum of all elements in an array using the reduce method.",
      "code": "function sumArray(arr) {\n  return arr.reduce((acc, num) => acc + num, 0);\n}",
      "usage": "const total = sumArray([1, 2, 3, 4, 5]);"
    },
    {
      "id": "g7d5f9",
      "title": "Filter: Unique Values",
      "date": "Jul 13",
      "category": "Array Functions",
      "description": "This function filters out duplicate values from an array, returning an array of unique values.",
      "code": "function uniqueValues(arr) {\n  return arr.filter((item, index) => arr.indexOf(item) === index);\n}",
      "usage": "const uniqueArray = uniqueValues([1, 2, 2, 3, 4, 4, 5]);"
    }
  ]
  